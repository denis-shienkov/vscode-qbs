/** Helper enumeration for wrapping the data keys from the Qbs's `cpp` module. */
export enum QbsProtocolCppModuleKey {
    CLanguageVersion = 'cLanguageVersion',
    CommonCompilerFlags = 'commonCompilerFlags',
    CompilerDefinesByLanguage = 'compilerDefinesByLanguage',
    CompilerIncludePaths = 'compilerIncludePaths',
    CompilerName = 'compilerName',
    CompilerPath = 'compilerPath',
    CompilerPathByLanguage = 'compilerPathByLanguage',
    CompilerVersion = 'compilerVersion',
    CompilerVersionMajor = 'compilerVersionMajor',
    CompilerVersionMinor = 'compilerVersionMinor',
    CompilerVersionPatch = 'compilerVersionPatch',
    CxxLanguageVersion = 'cxxLanguageVersion',
    CxxStandardLibrary = 'cxxStandardLibrary',
    Defines = 'defines',
    DistributionIncludePaths = 'distributionIncludePaths',
    DriverFlags = 'driverFlags',
    EnableExceptions = 'enableExceptions',
    EnableRtti = 'enableRtti',
    ExceptionHandlingModel = 'exceptionHandlingModel',
    FrameworkPaths = 'frameworkPaths',
    IncludePaths = 'includePaths',
    MachineType = 'machineType',
    MinimumDarwinVersion = 'minimumDarwinVersion',
    MinimumDarwinVersionCompilerFlag = 'minimumDarwinVersionCompilerFlag',
    PlatformCommonCompilerFlags = 'platformCommonCompilerFlags',
    PlatformDefines = 'platformDefines',
    PlatformDriverFlags = 'platformDriverFlags',
    PositionIndependentCode = 'positionIndependentCode',
    PrefixHeaders = 'prefixHeaders',
    SystemFrameworkPaths = 'systemFrameworkPaths',
    SystemIncludePaths = 'systemIncludePaths',
    Target = 'target',
    TargetArch = 'targetArch',
    TargetOS = 'targetOS',
    ToolchainInstallPath = 'toolchainInstallPath',
    UseCPrecompiledHeader = 'useCPrecompiledHeader',
    UseCxxPrecompiledHeader = 'useCxxPrecompiledHeader',
    UseObjcPrecompiledHeader = 'useObjcPrecompiledHeader',
    UseObjcxxPrecompiledHeader = 'useObjcxxPrecompiledHeader',
}
