{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "qbs",
    "scopeName": "source.qbs",
    "patterns": [
        {
            "include": "#import"
        },
        {
            "include": "#object"
        },
        {
            "include": "#comment"
        }
    ],
    "repository": {
        "import": {
            "begin": "\\b(import)\\b",
            "beginCaptures": {
                "1": {
                    "name": "keyword.control.import.qbs"
                }
            },
            "end": "$",
            "patterns": [
                {
                    "match": "\\b([\\w\\.]+)\\s+(\\d+\\.\\d+)?\\s",
                    "captures": {
                        "1": {
                            "name": "entity.name.section.import.module.qbs"
                        },
                        "2": {
                            "name": "constant.numeric.import.version.qbs"
                        }
                    }
                },
                {
                    "match": "\\b(as)\\s+(\\w*)",
                    "captures": {
                        "1": {
                            "name": "keyword.control.import.as.qbs"
                        },
                        "2": {
                            "name": "entity.name.type.import.alias.qbs"
                        }
                    }
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "object": {
            "begin": "\\b([A-Z][\\w\\.]*)\\s*(\\{|$)",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.type.object.qbs"
                }
            },
            "end": "\\}",
            "patterns": [
                {
                    "include": "$self"
                },
                {
                    "include": "#obj-property"
                },
                {
                    "include": "#obj-method"
                },
                {
                    "include": "#obj-declaration"
                },
                {
                    "include": "#obj-attributes"
                }
            ]
        },
        "obj-property": {
            "patterns": [
                {
                    "name": "storage.modifier.obj-property.qbs",
                    "match": "\\b(readonly)\\s+(?=property)"
                },
                {
                    "match": "\\b(property)\\s+([\\w<>]+)(?=\\s+\\w+\\s*:)",
                    "captures": {
                        "1": {
                            "name": "keyword.other.obj-property.qbs"
                        },
                        "2": {
                            "name": "storage.type.obj-property.type.qbs"
                        }
                    }
                },
                {
                    "match": "\\b(property)\\s+([\\w<>]+)\\s+(\\w+)\\s*$",
                    "captures": {
                        "1": {
                            "name": "keyword.other.obj-property.qbs"
                        },
                        "2": {
                            "name": "storage.type.obj-property.type.qbs"
                        },
                        "3": {
                            "name": "variable.parameter.obj-property.name.qbs"
                        }
                    }
                }
            ]
        },
        "obj-method": {
            "begin": "\\b(?=function)\\b",
            "end": "(?<=\\})",
            "patterns": [
                {
                    "include": "source.js"
                }
            ]
        },
        "obj-declaration": {
            "begin": "\\b([A-Z][a-z]*([A-Z][a-z]*)*)\\s*\\{",
            "beginCaptures": {
                "1": {
                    "name": "entity.name.type.obj-declaration.qbs"
                }
            },
            "end": "\\}",
            "patterns": [
                {
                    "include": "obj-attributes"
                },
                {
                    "include": "#comment"
                }
            ]
        },
        "obj-attributes": {
            "patterns": [
                {
                    "include": "#attr-prop"
                },
                {
                    "include": "#attr-array"
                },
                {
                    "include": "#attr-block"
                },
                {
                    "include": "#attr-expr"
                }
            ],
            "repository": {
                "attr-prop": {
                    "begin": "\\b([\\w\\.]*)\\s*:\\s*(?=[A-Z]\\w*\\s*\\{)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.attr-prop.qbs"
                        }
                    },
                    "end": "(?=\\})",
                    "patterns": [
                        {
                            "include": "#object"
                        }
                    ]
                },
                "attr-array": {
                    "begin": "\\b([\\w\\.]*)\\s*:\\s*\\[\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.attr-array.qbs"
                        }
                    },
                    "end": "\\]",
                    "patterns": [
                        {
                            "include": "#object"
                        },
                        {
                            "include": "source.js"
                        }
                    ]
                },
                "attr-block": {
                    "begin": "\\b([\\w\\.]*)\\s*:\\s*\\{\\s*",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.attr-block.qbs"
                        }
                    },
                    "end": "\\}",
                    "patterns": [
                        {
                            "include": "source.js"
                        }
                    ]
                },
                "attr-expr": {
                    "begin": "\\b([\\w\\.]*)\\s*:\\s*(?=[^\\s]+)",
                    "beginCaptures": {
                        "1": {
                            "name": "variable.parameter.attr-expr.qbs"
                        }
                    },
                    "end": ";|$",
                    "patterns": [
                        {
                            "include": "source.js"
                        }
                    ]
                }
            }
        },
        "string": {
            "patterns": [
                {
                    "name": "string.quoted.single.qbs",
                    "begin": "'",
                    "end": "'"
                },
                {
                    "name": "string.quoted.double.qbs",
                    "begin": "\"",
                    "end": "\""
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.qbs",
                    "begin": "(\\/\\/)",
                    "end": "$",
                    "patterns": [
                        {
                            "include": "#comment-contents"
                        }
                    ]
                },
                {
                    "name": "comment.block.documentation.qbs",
                    "begin": "(\\/\\*)",
                    "end": "(\\*\\/)",
                    "patterns": [
                        {
                            "include": "#comment-contents"
                        }
                    ]
                }
            ],
            "repository": {
                "comment-contents": {
                    "patterns": [
                        {
                            "name": "constant.language.qbs",
                            "match": "\\b(NOTE|TODO|DEBUG|XXX)\\b"
                        },
                        {
                            "name": "invalid",
                            "match": "\\b(BUG|FIXME|WARNING)\\b"
                        }
                    ]
                }
            }
        }
    }
}
